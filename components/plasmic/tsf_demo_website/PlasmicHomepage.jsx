/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: tapQSmgujw7smcBwiTayug
// Component: jTXG3Regz125
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateStateOnChangeProp,
  generateStateValueProp,
  hasVariant,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Header from "../../Header"; // plasmic-import: 0XA8z88jHqGh/component
import Button from "../../Button"; // plasmic-import: BmK5KSjeUCoq/component
import Testimonial from "../../Testimonial"; // plasmic-import: e318ljy9CoY1/component
import BlogPosts from "../../BlogPosts"; // plasmic-import: MiL8App_emDg/component
import CtaBlock from "../../CtaBlock"; // plasmic-import: XWoJFMRAhX-a/component
import HeroSection from "../../HeroSection"; // plasmic-import: asQL227ll1f6/component
import Footer from "../../Footer"; // plasmic-import: _as8O7FbI-4s/component
import Drawer from "../../Drawer"; // plasmic-import: l9ua_tRYWVKP/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: tapQSmgujw7smcBwiTayug/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: tapQSmgujw7smcBwiTayug/styleTokensProvider
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: tapQSmgujw7smcBwiTayug/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: jTXG3Regz125/css
import ArrowRightSvgIcon from "./icons/PlasmicIcon__ArrowRightSvg"; // plasmic-import: ZAqybCfm4jTf/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = _useGlobalVariants();
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "drawer.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const styleTokensClassNames = _useStyleTokens();
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__l961H)}>
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <div className={classNames(projectcss.all, sty.freeBox___44YNf)}>
              <div className={classNames(projectcss.all, sty.freeBox__tkktS)}>
                <div className={classNames(projectcss.all, sty.freeBox__jaSt4)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__djZij)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___3Gcs8
                      )}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Ready to accept or acquiesce willing."
                          : "Accuracy Made Simple.\nConfidence Made Certain."}
                      </h1>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kmj72
                        )}
                      >
                        {
                          "Welcome to the future of time series forecasting. \n\n\r\nPowered by a breakthrough in forecasting science, Targeted Seasonal Forecasts deliver daily predictions with month-long horizons \u2014 and quantified confidence in every single value. The proprietary library of irregular seasonal models reveals objective patterns in the historical data. Each forecast value is selected from up to 2,500 different forecast models, based on historical patterns of accuracy. \r\n"
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__u8N7I
                        )}
                        color={"neutral"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7Dx1F
                            )}
                          >
                            {"Try it yourself"}
                          </div>
                        }
                        onClick={async event => {
                          const $steps = {};
                          $steps["goToTsfEngineDemo"] = true
                            ? (() => {
                                const actionArgs = { destination: `/engine` };
                                return (({ destination }) => {
                                  if (
                                    typeof destination === "string" &&
                                    destination.startsWith("#")
                                  ) {
                                    document
                                      .getElementById(destination.substr(1))
                                      .scrollIntoView({ behavior: "smooth" });
                                  } else {
                                    __nextRouter?.push(destination);
                                  }
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["goToTsfEngineDemo"] != null &&
                            typeof $steps["goToTsfEngineDemo"] === "object" &&
                            typeof $steps["goToTsfEngineDemo"].then ===
                              "function"
                          ) {
                            $steps["goToTsfEngineDemo"] = await $steps[
                              "goToTsfEngineDemo"
                            ];
                          }
                        }}
                        size={"extraLarge"}
                      />
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ftgRx)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ld3Y1)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"553px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tsf_demo_website/images/tsfLogoStackedSvg.svg",
                        fullWidth: 612,
                        fullHeight: 515.2,
                        aspectRatio: 1.187888
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <section
            data-plasmic-name={"features"}
            data-plasmic-override={overrides.features}
            className={classNames(projectcss.all, sty.features)}
          >
            <div className={classNames(projectcss.all, sty.column__pCy12)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__eevss
                )}
              >
                {"Value propositions headline."}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__szmzL
                )}
              >
                {
                  "Lorem Ipsum is simply dummy text of the printing and typesetting industry. \nLorem Ipsum has been the industry's standard dummy text ever since the 1500s"
                }
              </div>
              <div
                data-plasmic-name={"container4"}
                data-plasmic-override={overrides.container4}
                className={classNames(projectcss.all, sty.container4)}
              >
                <div
                  data-plasmic-name={"outerRow2"}
                  data-plasmic-override={overrides.outerRow2}
                  className={classNames(projectcss.all, sty.outerRow2)}
                >
                  <div
                    data-plasmic-name={"row2"}
                    data-plasmic-override={overrides.row2}
                    className={classNames(projectcss.all, sty.row2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__osCM)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zc2Oi
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zGgkp
                          )}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__yKMiE
                          )}
                        >
                          {"Some value proposition of your service."}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gk93Q
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__vqkK
                          )}
                          end={
                            <ArrowRightSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pFkqU
                              )}
                              role={"img"}
                            />
                          }
                          iconEnd={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sKNy
                              )}
                            >
                              {"Learn more"}
                            </div>
                          }
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__zrlbN)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2FbO
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__yvXic)}
                          displayHeight={"400px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"400px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/tsf_demo_website/images/corinneKutzTMi2R5NfoUnsplashJpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"container5"}
                data-plasmic-override={overrides.container5}
                className={classNames(projectcss.all, sty.container5)}
              >
                <div
                  data-plasmic-name={"outerRow3"}
                  data-plasmic-override={overrides.outerRow3}
                  className={classNames(projectcss.all, sty.outerRow3)}
                >
                  <div
                    data-plasmic-name={"row4"}
                    data-plasmic-override={overrides.row4}
                    className={classNames(projectcss.all, sty.row4)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__spWft)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__rNgsa)}
                        displayHeight={"400px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"none"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"400px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tsf_demo_website/images/tiffanyTertipesNxcs8Wwj9J0UnsplashJpg.jpg",
                          fullWidth: 1920,
                          fullHeight: 1280,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__m4DEe)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xc7Qj
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fq4RS
                          )}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__hlxkm
                          )}
                        >
                          {"Some value proposition of your service."}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nw0Bm
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__fgEbw
                          )}
                          end={
                            <ArrowRightSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__eEtGz
                              )}
                              role={"img"}
                            />
                          }
                          iconEnd={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xuPzO
                              )}
                            >
                              {"Learn more"}
                            </div>
                          }
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"container6"}
                data-plasmic-override={overrides.container6}
                className={classNames(projectcss.all, sty.container6)}
              >
                <div
                  data-plasmic-name={"outerRow4"}
                  data-plasmic-override={overrides.outerRow4}
                  className={classNames(projectcss.all, sty.outerRow4)}
                >
                  <div
                    data-plasmic-name={"row3"}
                    data-plasmic-override={overrides.row3}
                    className={classNames(projectcss.all, sty.row3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__ug0Ub)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__tWZmz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uzokv
                          )}
                        />

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__j0Ei
                          )}
                        >
                          {"Some value proposition of your service."}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fuLiv
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                          }
                        </div>
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__ncIp
                          )}
                          end={
                            <ArrowRightSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rs9Ia
                              )}
                              role={"img"}
                            />
                          }
                          iconEnd={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__phvym
                              )}
                            >
                              {"Learn more"}
                            </div>
                          }
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___1BApW)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__jDsse)}
                        displayHeight={"400px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"none"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"400px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tsf_demo_website/images/xpsOcAuPlfZxEcUnsplashJpg.jpg",
                          fullWidth: 640,
                          fullHeight: 360,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames(projectcss.all, sty.testimonials)}
          >
            <div className={classNames(projectcss.all, sty.column___8N2FP)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__iSMM
                )}
              >
                {"Testimonials"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ed33S
                )}
              >
                {
                  "Lorem Ipsum is simply dummy text of the printing and typesetting industry. \nLorem Ipsum has been the industry's standard dummy text ever since the 1500s"
                }
              </div>
              <div className={classNames(projectcss.all, sty.columns__ebeaz)}>
                <div className={classNames(projectcss.all, sty.column__ea40)}>
                  <Testimonial
                    data-plasmic-name={"testimonial"}
                    data-plasmic-override={overrides.testimonial}
                    className={classNames("__wab_instance", sty.testimonial)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__kg1CK)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__oooIm)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__ru59U)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__vx06Q)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tsf_demo_website/images/mePng.png",
                          fullWidth: 140,
                          fullHeight: 140,
                          aspectRatio: undefined
                        }}
                      />

                      <h5
                        className={classNames(
                          projectcss.all,
                          projectcss.h5,
                          projectcss.__wab_text,
                          sty.h5__asUcZ
                        )}
                      >
                        {"Zulia Maron Duo"}
                      </h5>
                      <div
                        before={""}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dwGgd
                        )}
                      >
                        {
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                        }
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__bmFAy)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__dUloT)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__vWvqn)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__d6RLe
                        )}
                      >
                        {"\u201c"}
                      </h2>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kIr2M
                        )}
                      >
                        {
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__oyRqH
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__eQgJr
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__yNulp)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/tsf_demo_website/images/thumbAvatar1583758683Jpg.jpg",
                              fullWidth: 160,
                              fullHeight: 160,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__vbBy
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__lf3Jy
                            )}
                          >
                            {"Lorem Ipsum"}
                          </h5>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <BlogPosts
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames("__wab_instance", sty.blogPosts)}
          />

          <CtaBlock
            data-plasmic-name={"ctaBlock"}
            data-plasmic-override={overrides.ctaBlock}
            className={classNames("__wab_instance", sty.ctaBlock)}
          />

          <HeroSection
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames("__wab_instance", sty.heroSection)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />

          <Drawer
            data-plasmic-name={"drawer"}
            data-plasmic-override={overrides.drawer}
            className={classNames("__wab_instance", sty.drawer)}
            isOpen={generateStateValueProp($state, ["drawer", "isOpen"])}
            onOpenChange={async (...eventArgs) => {
              generateStateOnChangeProp($state, ["drawer", "isOpen"]).apply(
                null,
                eventArgs
              );
              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "h1",
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "container6",
    "outerRow4",
    "row3",
    "testimonials",
    "testimonial",
    "blogPosts",
    "ctaBlock",
    "heroSection",
    "footer",
    "drawer"
  ],

  header: ["header"],
  h1: ["h1"],
  features: [
    "features",
    "container4",
    "outerRow2",
    "row2",
    "container5",
    "outerRow3",
    "row4",
    "container6",
    "outerRow4",
    "row3"
  ],

  container4: ["container4", "outerRow2", "row2"],
  outerRow2: ["outerRow2", "row2"],
  row2: ["row2"],
  container5: ["container5", "outerRow3", "row4"],
  outerRow3: ["outerRow3", "row4"],
  row4: ["row4"],
  container6: ["container6", "outerRow4", "row3"],
  outerRow4: ["outerRow4", "row3"],
  row3: ["row3"],
  testimonials: ["testimonials", "testimonial"],
  testimonial: ["testimonial"],
  blogPosts: ["blogPosts"],
  ctaBlock: ["ctaBlock"],
  heroSection: ["heroSection"],
  footer: ["footer"],
  drawer: ["drawer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    features: makeNodeComponent("features"),
    container4: makeNodeComponent("container4"),
    outerRow2: makeNodeComponent("outerRow2"),
    row2: makeNodeComponent("row2"),
    container5: makeNodeComponent("container5"),
    outerRow3: makeNodeComponent("outerRow3"),
    row4: makeNodeComponent("row4"),
    container6: makeNodeComponent("container6"),
    outerRow4: makeNodeComponent("outerRow4"),
    row3: makeNodeComponent("row3"),
    testimonials: makeNodeComponent("testimonials"),
    testimonial: makeNodeComponent("testimonial"),
    blogPosts: makeNodeComponent("blogPosts"),
    ctaBlock: makeNodeComponent("ctaBlock"),
    heroSection: makeNodeComponent("heroSection"),
    footer: makeNodeComponent("footer"),
    drawer: makeNodeComponent("drawer"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
